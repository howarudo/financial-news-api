version: "3.8"

x-airflow-common:
  &airflow-common
  build: ./airflow-scraper
  environment:
    &airflow-common-env
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-meta-postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
    _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    AIRFLOW_PROJ_DIR: airflow-scraper
  volumes:
    - ${AIRFLOW_PROJ_DIR:-./airflow-scraper}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-./airflow-scraper}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-./airflow-scraper}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-./airflow-scraper}/plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}"
  depends_on:
    &airflow-common-depends-on
    airflow-meta-postgres:
      condition: service_healthy

services:
  airflow-meta-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db upgrade &&
        airflow users create --username "${_AIRFLOW_WWW_USER_USERNAME:-airflow}" \
                             --firstname Admin \
                             --lastname User \
                             --role Admin \
                             --email admin@example.com \
                             --password "${_AIRFLOW_WWW_USER_PASSWORD:-airflow}" &&
        exec /entrypoint airflow version
    environment:
      <<: *airflow-common-env
    user: "0:0"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-./airflow-scraper}:/sources

volumes:
  postgres-db-volume:
